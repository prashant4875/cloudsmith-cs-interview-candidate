name: Promote Python Package


on:
  repository_dispatch:
    types: [package_synchronized]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'staging'
  CLOUDSMITH_PRODUCTION_REPO: 'production'
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        # with:
        #   oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
        #   oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}
          
      - name: Find latest package in staging
        id: latest
        run: |
          echo "Querying latest package in staging repository..."

          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -F json)

          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')
          PACKAGE_NAME=$(echo "$PACKAGE_DATA" | jq -r '.data[0].name')
          VERSION=$(echo "$PACKAGE_DATA" | jq -r '.data[0].version')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "No package found in staging."
            exit 1
          fi

          echo "Latest package: $PACKAGE_NAME:$VERSION"
          echo "identifier=$IDENTIFIER" >> $GITHUB_OUTPUT
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Tag latest package as ready-for-production
        run: |
          IDENTIFIER="${{ steps.latest.outputs.identifier }}"
          PACKAGE_NAME="${{ steps.latest.outputs.package_name }}"
          VERSION="${{ steps.latest.outputs.version }}"

          echo "Tagging latest package [$PACKAGE_NAME:$VERSION] with 'ready-for-production' tag."
          cloudsmith tags add \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
            ready-for-production

      - name: Promote all ready-for-production packages
        run: |
          echo "Finding all packages tagged with ready-for-production..."

          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} \
            -q "tags:ready-for-production" -F json)

          PACKAGE_COUNT=$(echo "$PACKAGE_DATA" | jq '.data | length')

          if [ "$PACKAGE_COUNT" -eq 0 ]; then
            echo "No packages found with ready-for-production tag."
            exit 1
          fi

          echo "Found $PACKAGE_COUNT package(s) tagged ready-for-production."

          for IDENTIFIER in $(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm'); do
            echo "Promoting package: $IDENTIFIER"
            cloudsmith mv --yes \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
              ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
          done
